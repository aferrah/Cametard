CREATE TABLE Camions(
   immat VARCHAR(10),
   type_camion VARCHAR(20) CHECK(type_camion IN ('frigo', 'citerne', 'palette', 'plateau')),
   poids_transport DECIMAL(15,2) CHECK(poids_transport > 0),
   CONSTRAINT PK_Camions PRIMARY KEY(immat)
);

CREATE TABLE Chauffeurs(
   numero_permis VARCHAR(20),
   nom VARCHAR(50),
   prenom VARCHAR(50),
   CONSTRAINT PK_Chauffeurs PRIMARY KEY(numero_permis)
);

CREATE TABLE Cargaisons(
   id_cargaison INT AUTO_INCREMENT,
   date_transport DATE,
   ville_depart VARCHAR(50),
   ville_arrivee VARCHAR(50),
   immat VARCHAR(10) NOT NULL,
   numero_permis VARCHAR(20) NOT NULL,
   CONSTRAINT PK_Cargaisons PRIMARY KEY(id_cargaison),
   CONSTRAINT FK_Cargaisons_Camions FOREIGN KEY(immat) REFERENCES Camions(immat) ON DELETE CASCADE,
   CONSTRAINT FK_Cargaisons_Chauffeurs FOREIGN KEY(numero_permis) REFERENCES Chauffeurs(numero_permis) ON DELETE CASCADE
);

CREATE TABLE Marchandises(
   id_marchandise INT AUTO_INCREMENT,
   nom VARCHAR(50),
   type_requis VARCHAR(20) CHECK(type_requis IN ('frigo', 'citerne', 'palette', 'plateau')),
   poids DECIMAL(15,2) CHECK(poids > 0),
   id_cargaison INT NOT NULL,
   CONSTRAINT PK_Marchandises PRIMARY KEY(id_marchandise),
   CONSTRAINT FK_Marchandises_Cargaisons FOREIGN KEY(id_cargaison) REFERENCES Cargaisons(id_cargaison) ON DELETE CASCADE
);

/*exemple d'insertion qui d√©clenche une violation de la contrainte*/
/* INSERT INTO Camions values ('khkjh','camion',-50,); */

/*
üìå Plan d'Action pour la Partie 2 et 3

D'apr√®s le sujet du projet, voici ce que nous devons faire :

    Ins√©rer un jeu de donn√©es permettant de tester les requ√™tes de la Partie 3.
    Faire un test d‚Äôinsertion erron√©e pour v√©rifier les contraintes d'int√©grit√©.
    √âcrire les requ√™tes SQL pour r√©pondre aux questions Q1 √† Q5 et les tester.

üõ† 1. Jeu de Donn√©es pour Tester les Requ√™tes

Nous allons ins√©rer des donn√©es valides pour chaque table.
üöö Insertion de Camions

INSERT INTO Camions (immat, type_camion, poids_transport) VALUES
('AB-123-CD', 'frigo', 18000.00),
('XY-456-ZZ', 'citerne', 25000.00),
('EF-789-GH', 'palette', 12000.00),
('LM-345-NO', 'plateau', 15000.00);

üë®‚Äç‚úàÔ∏è Insertion de Chauffeurs

INSERT INTO Chauffeurs (numero_permis, nom, prenom) VALUES
('PERM123456', 'Durand', 'Jean'),
('PERM654321', 'Martin', 'Sophie'),
('PERM111222', 'Leroy', 'Thomas'),
('PERM333444', 'Dupont', 'Alice');

üì¶ Insertion de Cargaisons

INSERT INTO Cargaisons (date_transport, ville_depart, ville_arrivee, immat, numero_permis) VALUES
('2024-03-10', 'Paris', 'Lyon', 'AB-123-CD', 'PERM123456'),
('2024-03-10', 'Marseille', 'Bordeaux', 'XY-456-ZZ', 'PERM654321'),
('2024-03-11', 'Lille', 'Nantes', 'EF-789-GH', 'PERM111222'),
('2024-03-11', 'Nice', 'Toulouse', 'LM-345-NO', 'PERM333444');

üì¶ Insertion de Marchandises

INSERT INTO Marchandises (nom, type_requis, poids, id_cargaison) VALUES
('Pommes', 'frigo', 16000.00, 1),
('Carburant', 'citerne', 24000.00, 2),
('Meubles', 'palette', 10000.00, 3),
('B√©ton', 'plateau', 14000.00, 4),
('Poissons', 'frigo', 2000.00, 1);

üö® 2. Test d‚ÄôInsertion de Donn√©es Erron√©es

Nous allons ins√©rer des donn√©es qui violent les contraintes d'int√©grit√©.
‚ùå Essai d‚Äôinsertion d‚Äôun camion avec un poids invalide (doit √©chouer)

INSERT INTO Camions (immat, type_camion, poids_transport) VALUES
('ZZ-999-AA', 'frigo', -5000.00);  -- √âchoue car poids_transport > 0

‚ùå Essai d‚Äôinsertion d‚Äôune cargaison avec un camion inexistant (doit √©chouer)

INSERT INTO Cargaisons (date_transport, ville_depart, ville_arrivee, immat, numero_permis) VALUES
('2024-03-12', 'Paris', 'Lyon', 'XX-000-YY', 'PERM123456');  -- √âchoue car XX-000-YY n'existe pas dans Camions

‚ùå Essai d‚Äôinsertion d‚Äôune marchandise avec un type de camion invalide (doit √©chouer)

INSERT INTO Marchandises (nom, type_requis, poids, id_cargaison) VALUES
('T√©l√©viseurs', 'camion-benne', 5000.00, 1);  -- √âchoue car 'camion-benne' n'est pas un type valide

üìä 3. Requ√™tes SQL pour la Partie 3

Voici les requ√™tes SQL demand√©es pour r√©pondre aux questions Q1 √† Q5.
üîç Q1 : Liste des marchandises tri√©es par ville de d√©part et par poids

SELECT m.nom, m.type_requis, m.poids, c.ville_depart
FROM Marchandises m
JOIN Cargaisons c ON m.id_cargaison = c.id_cargaison
ORDER BY c.ville_depart ASC, m.poids DESC;

üîç Q2 : Liste des camions de type frigo avec un poids total de marchandises > 15 tonnes

SELECT ca.immat, ca.type_camion, SUM(m.poids) AS poids_total
FROM Camions ca
JOIN Cargaisons c ON ca.immat = c.immat
JOIN Marchandises m ON c.id_cargaison = m.id_cargaison
WHERE ca.type_camion = 'frigo'
GROUP BY ca.immat, ca.type_camion
HAVING SUM(m.poids) > 15000;

üîç Q3 : Liste des chauffeurs non affect√©s √† un camion le 1/4/2021

SELECT ch.numero_permis, ch.nom, ch.prenom
FROM Chauffeurs ch
WHERE ch.numero_permis NOT IN (
    SELECT c.numero_permis
    FROM Cargaisons c
    WHERE c.date_transport = '2021-04-01'
);

üîç Q4 : Nombre de jours d‚Äôutilisation par camion

SELECT ca.immat, COUNT(DISTINCT c.date_transport) AS jours_utilisation
FROM Camions ca
JOIN Cargaisons c ON ca.immat = c.immat
GROUP BY ca.immat;

üîç Q5 : La ville qui a le plus de livraisons de cargaisons

SELECT c.ville_arrivee, COUNT(*) AS nombre_livraisons
FROM Cargaisons c
GROUP BY c.ville_arrivee
ORDER BY nombre_livraisons DESC
LIMIT 1;

*/